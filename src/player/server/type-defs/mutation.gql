type Mutation {
  # authorization
	logIn(input: LogInInput!): JWT!

  # queue
  clearQueues: User!
  clearNextQueues: User!
  nextQueueSong: User!
  previousQueueSong: User!
  queueSongNext(songID: UUID!): User!
  queueSongAfter(songID: UUID!): User!
  queueSongLater(songID: UUID!): User!
  playLibrary: User!
  playTopOneHundredSongs: User!
  playSong(songID: UUID!): User!
  playAlbum(albumID: UUID!): User!
  playPlaylist(playlistID: UUID!): User!
  shuffleNext: User!
  shuffleLibrary: User!
  shuffleAlbum(albumID: UUID!): User!
  shuffleArtist(artistID: UUID!): User!
  shufflePlaylist(playlistID: UUID!): User!
  removeSongFromQueueNext(index: NonNegativeInt!): User!
  removeSongFromQueueLater(index: NonNegativeInt!): User!

  # library
  deleteLibrary: User!
  addSongToLibrary(songID: UUID!): Song!
  addAlbumToLibrary(albumID: UUID!): Album!
  addArtistToLibrary(artistID: UUID!): Artist!
  addPlaylistToLibrary(playlistID: UUID!): Playlist!
  removeSongFromLibrary(songID: UUID!): Song!
  removeAlbumFromLibrary(albumID: UUID!): Album!
  removeArtistFromLibrary(artistID: UUID!): Artist!
  removePlaylistFromLibrary(playlistID: UUID!): Playlist!
  
  # other
  deleteUser: Void
  deletePlaylist(playlistID: UUID!): User!
  createPlaylist(playlist: PlaylistInput!): Playlist!
  addSongToPlaylist(songID: UUID!, playlistID: UUID!): Playlist!
  addAlbumToPlaylist(albumID: UUID!, playlistID: UUID!): Playlist!
  removeSongFromPlaylist(playlistID: UUID!, songID: UUID!): Playlist!
  renamePlaylist(playlistID: UUID!, title: NonEmptyString!): Playlist!
}